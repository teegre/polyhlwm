#!/usr/bin/env bash

# this is a simple config for herbstluftwm

hc() {
  herbstclient "$@"
}

dunst-merge

floaterm="myhc float"
polyreload="$HOME/.config/herbstluftwm/polybar-start"
mastervolup="pamixer -i 5"
mastervoldn="pamixer -d 5"
mastervolmu="pamixer -t"
musicvolup="mpcw vol +5"
musicvoldn="mpcw vol -5"
musicvoldm="mpcw dim"
musictoggle="mpcw toggle"
musicnext="mpc -q next"
musicprev="mpc -q prev"
musicstop="mpcw stop"
spotifydvolup="appvol spotifyd -n +5"
spotifydvoldn="appvol spotifyd -n -5"
spotifydtoggle="playerctl -p spotifyd play-pause"
spotifydnext="playerctl -p spotifyd next"
spotifydprev="playerctl -p spotifyd prev"
lighttoggle="ylight -t -S1000 -N"
lightup="lt inc"
lightdn="lt dec"
lighttimer="ylight -T"

hc emit_hook reload

fn="$(xgetres dmenu.font)"
nb="$(xgetres color0)"
nf="$(xgetres color7)"
sb="$(xgetres color9)"
sf="$(xgetres color0)"

# remove all existing keybindings
hc keyunbind --all

# keybindings
# if you have a super key you will be much happier with Mod set to Mod4
#Mod=Mod1    # Use alt as the main modifier
Mod=Mod4   # Use the super key as the main modifier

hc keybind $Mod-x           spawn dmenu_run -fn "$fn" -nb "$nb" -nf "$nf" -sb "$sb" -sf "$sf"
hc keybind $Mod-Control-x   spawn bmenu
hc keybind $Mod-Shift-e     spawn hc-restart-menu

# shellcheck disable=SC2086
{
hc keybind $Mod-a           spawn $floaterm
hc keybind $Mod-Control-r   spawn $polyreload
hc keybind $Mod-F1          spawn $musictoggle
hc keybind $Mod-F2          spawn $musicprev
hc keybind $Mod-F3          spawn $musicnext
hc keybind $Mod-F4          spawn $musicstop
hc keybind $Mod-Control-F1  spawn $spotifydtoggle
hc keybind $Mod-Control-F2  spawn $spotifydprev
hc keybind $Mod-Control-F3  spawn $spotifydnext
hc keybind $Mod-F9          spawn $musicvoldm
hc keybind $Mod-F10         spawn $musicvoldn
hc keybind $Mod-F11         spawn $musicvolup
hc keybind $Mod-Control-F9  spawn $mastervolmu
hc keybind $Mod-Control-F10 spawn $mastervoldn
hc keybind $Mod-Control-F11 spawn $mastervolup
hc keybind $Mod-Shift-F10   spawn $spotifydvoldn
hc keybind $Mod-Shift-F11   spawn $spotifydvolup
hc keybind $Mod-Shift-F1    spawn $lighttoggle
hc keybind $Mod-Shift-F2    spawn $lightdn
hc keybind $Mod-Shift-F3    spawn $lightup
hc keybind $Mod-Control-F4  spawn screen_off
hc keybind $Mod-Shift-F4    spawn dwm-lock
hc keybind $Mod-Shift-F9    spawn $lighttimer
}
# hc keybind $Mod-Control-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-q close
hc keybind $Mod-Return spawn "${TERMINAL:-xterm}" # use your $TERMINAL with xterm as fallback

# basic movement in tiling and floating mode
# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

# moving clients in tiling and floating mode
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# tags
tag_names=( {1..9} )
# tag_keys=( {1..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
  hc add "${tag_names[$i]}"
  # key="${tag_keys[$i]}"
  # if [ -n "$key" ] ; then
    # hc keybind "$Mod-$key" use_index "$i"
    # hc keybind "$Mod-$key" move_index "$i"
  # fi
done

# cycle through tags
hc keybind $Mod-asterisk use_index +1 --skip-visible
hc keybind $Mod-ugrave   use_index -1 --skip-visible

hc set swap_monitors_to_get_tag false

hc keybind $Mod-ampersand  spawn myhc switch_to_tag 1
hc keybind $Mod-eacute     spawn myhc switch_to_tag 2
hc keybind $Mod-quotedbl   spawn myhc switch_to_tag 3
hc keybind $Mod-apostrophe spawn myhc switch_to_tag 4
hc keybind $Mod-parenleft  spawn myhc switch_to_tag 5
hc keybind $Mod-minus      spawn myhc switch_to_tag 6
hc keybind $Mod-egrave     spawn myhc switch_to_tag 7
hc keybind $Mod-underscore spawn myhc switch_to_tag 8
hc keybind $Mod-ccedilla   spawn myhc switch_to_tag 9

hc keybind $Mod-Control-ampersand  spawn myhc switch_to_monitor 1
hc keybind $Mod-Control-eacute     spawn myhc switch_to_monitor 2
hc keybind $Mod-Control-quotedbl   spawn myhc switch_to_monitor 3
hc keybind $Mod-Control-apostrophe spawn myhc switch_to_monitor 4
hc keybind $Mod-Control-parenleft  spawn myhc switch_to_monitor 5
hc keybind $Mod-Control-minus      spawn myhc switch_to_monitor 6
hc keybind $Mod-Control-egrave     spawn myhc switch_to_monitor 7
hc keybind $Mod-Control-underscore spawn myhc switch_to_monitor 8
hc keybind $Mod-Control-ccedilla   spawn myhc switch_to_monitor 9

hc keybind $Mod-Shift-ampersand  move_index 0
hc keybind $Mod-Shift-eacute     move_index 1
hc keybind $Mod-Shift-quotedbl   move_index 2
hc keybind $Mod-Shift-apostrophe move_index 3
hc keybind $Mod-Shift-parenleft  move_index 4
hc keybind $Mod-Shift-minus      move_index 5
hc keybind $Mod-Shift-egrave     move_index 6
hc keybind $Mod-Shift-underscore move_index 7
hc keybind $Mod-Shift-ccedilla   move_index 8

# layouting
hc keybind $Mod-r remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-Shift-f set_attr clients.focus.floating toggle
hc keybind $Mod-p pseudotile toggle

hc keybind $Mod-v spawn myhc setlayout v # vertical
hc keybind $Mod-w spawn myhc setlayout h # horizontal
hc keybind $Mod-m spawn myhc setlayout m # max
hc keybind $Mod-g spawn myhc setlayout g # grid

# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
# hc keybind $Mod-space                                         \
   # or , and . compare tags.focus.curframe_wcount = 2          \
   # . cycle_layout +1 vertical horizontal max vertical grid    \
   # , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   spawn myhc cycle_monitor
hc keybind $Mod-twosuperior spawn myhc cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color "$(xgetres color7)"
hc set frame_border_normal_color "$(xgetres color0)"
hc set frame_bg_normal_color "$(xgetres color0)"
hc set frame_bg_active_color "$(xgetres color3)"
hc set frame_border_width 1
hc set always_show_frame off
hc set frame_bg_transparent on
hc set frame_transparent_width 1
hc set frame_gap 1

hc attr theme.active.color "$(xgetres color6)"
hc attr theme.normal.color "$(xgetres color0)"
hc attr theme.urgent.color "$(xgetres color3)"
hc attr theme.inner_width 1
hc attr theme.inner_color "$(xgetres color0)"
hc attr theme.border_width 1
hc attr theme.floating.border_width 1
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color "$(xgetres color0)"
hc attr theme.active.inner_color "$(xgetres color7)"
hc attr theme.active.outer_color "$(xgetres color7)"
hc attr theme.background_color "$(xgetres color2)"

hc set window_gap 6
hc set frame_padding 0
hc set smart_window_surroundings on
hc set smart_frame_surroundings on
hc set mouse_recenter_gap 1

# rules
hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

hc rule class=firefox tag=2
hc rule class=Steam   tag=5

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or simply:
hc detect_monitors

# launch polybar
"$HOME/.config/herbstluftwm/polybar-start"
