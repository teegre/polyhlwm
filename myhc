#! /usr/bin/env bash

hc() { herbstclient "$@"; }

_get_focused() {
  # get focused monitor info
  while read -r _mon; do
    [[ $_mon =~ \[FOCUS\]$ ]] && { echo "$_mon"; return 0; }
  done <<< "$(hc list_monitors)"
  unset _mon
  return 1
}

_get_tag() {
  # extract tag from focuesd monitor info
  IFS=$'\n' read -d "" -ra __tag <<< "${1//\"/$'\n'}"
  echo "${__tag[1]}"
  unset __tag
}

get_focused_tag() {
  local mon
  mon="$(_get_focused)" || return 1
  _get_tag "$mon"
  return 0
}

get_float_tag() {
  while read -r attr; do
    [[ $attr =~ ^.*tag.*$ ]] && {
      _get_tag "$attr"
      return 0
    }
  done <<< "$(hc attr clients."$(<"$floaterm")")"
  return 1
}

get_focused_mon() {
  local mon
  mon="$(_get_focused)"
  echo "${mon:0:1}"
}

get_layout() {
  local _layout tag
  tag="${1:-"$(get_focused_tag)"}"
  while read -r L; do
    [[ $L =~ \[FOCUS\]$ ]] && { _layout="$L"; break; }
  done < <(hc layout "$tag")
  unset L
  IFS=$'\n' read -d "" -ra __layout <<< "${_layout// /$'\n'}"
  echo "${__layout[1]:0:-1}"
  unset __layout
}

set_layout() {
  case $1 in
    v) hc set_layout vertical   ;;
    h) hc set_layout horizontal ;;
    m) hc set_layout max        ;;
    g) hc set_layout grid       ;;
    *) hc set_layout vertical
  esac
  hc emit_hook "layout_changed"
}

# we want tag to stay on the monitor it has been assign to
# unless we need to explicitly move it to another monitor.
# so we need to keep track of monitors/tags
# when a tag is used on a monitor, save "tag::monitor"

tag_save_state="/tmp/herbstluftwm:tag_save_state"

is_tag_empty() {
  local _tag="$1"
  IFS=$'\t' read -ra __status <<< "$(hc tag_status)"
  for tag in "${__status[@]}"; do
    [[ ${tag:1} == "$_tag" && ${tag:0:1} == "." ]] && { return 0; }
  done
  return 1
}

save_tag_mon() {
  local mon _tag="$1"
  mon="$(hc attr monitors.focus.index)"
  if ! get_tag_mon "$_tag" > /dev/null; then
    echo "$_tag::$mon" >> "$tag_save_state"
    return 0
  elif [[ ! -f "$tag_save_state" ]]; then
    echo "$_tag::$mon" > "$tag_save_state"
  else
    IFS=$'\n' read -d "" -ra _ss < "$tag_save_state"
    for ((i=0;i<${#_ss};i++)); do
      [[ ${_ss[$i]} =~ ^$_tag ]] && {
        _ss[$i]="$_tag::$mon"
        :> "$tag_save_state"
        local T
        for ((j=0;j<${#_ss};j++)); do
          [[ ${_ss[$j]} =~ ^(.*):: ]] && T="${BASH_REMATCH[1]}"
          is_tag_empty "$T" && continue
          echo "${_ss[$j]}" >> "$tag_save_state"
        done
        unset _ss
        return 0
      }
    done
  fi
  return 1
}

get_tag_mon() {
  local mon _tag="$1"
  mon="$(hc attr monitors.focus.index)"
  [[ ! -f "$tag_save_state" ]] && {
    echo "$mon"
    return 1
  }
  while read -r __tag; do
    [[ $__tag =~ ^$_tag ]] && {
      IFS=$'\n' read -d "" -ra _ss <<< "${__tag//::/$'\n'}"
      echo "${_ss[1]}"
      unset _ss __tag
      return 0
    }
  done <<< "$(< "$tag_save_state")"
  echo "$mon"
  return 1
}

switch_to_tag() {
  local mon _tag="$1"
  mon="$(get_tag_mon "$_tag")"
  hc chain . lock . focus_monitor "$mon" . use "$_tag" . unlock
  save_tag_mon "$_tag"
}

switch_to_monitor() {
  local _tag
  _tag="$1"
  hc set swap_monitors_to_get_tag true
  hc chain . lock . use "$_tag" . unlock
  hc set swap_monitors_to_get_tag false
  save_tag_mon "$_tag"
}

handle_floaterm() {
  if xdotool search --onlyvisible --classname "floaterm"; then
    ctag="$(get_focused_tag)" || exit 1
    ftag="$(get_float_tag)" || exit 1
    [[ $ctag == "$ftag" ]] && {
      xdotool search --onlyvisible --classname "floaterm" windowunmap
      return 0
    }
  fi
  
  if [[ -f "$floaterm" ]]; then
    client="$(<"$floaterm")"
    if ! hc bring "$client" 2> /dev/null; then
      xdotool search --classname "floaterm" windowmap && return 0
    else
      return 0
    fi
  fi
  
  if ! xdotool search --classname "floaterm" windowmap; then
    hc unrule instance="floaterm"
    hc rule instance="floaterm" floating=on focus=on
    hc spawn st -n "floaterm" -g "120x24" 2> /dev/null
    xdotool search --sync --onlyvisible --classname "floaterm"
    hc attr clients.focus.winid > "$floaterm"
    return 0
  fi
  return 1
}

floaterm="/tmp/herbstluftwm:floaterm"

case "$1" in
  float)     handle_floaterm ;;
  layout)    get_layout "$2" ;;
  setlayout) set_layout "$2" ;;
  *)      "$@"
esac
